#include "../lib/stdlib.func";
#include "../lib/messages.func";
#include "../lib/error-codes.func";
#include "../lib/op-codes.func";

{-TLB
  initialize#0xbe5a7595 query_id:uint64 code:^Cell fwd_msg_payload:(Maybe ^Cell) = InitializeMsgBody;
-}
() recv_internal(cell in_msg_full, slice in_msg_body) {
    slice cs = in_msg_full.begin_parse();
    cs~load_uint(4); ;; skip flags

    slice ds = get_data().begin_parse();

    throw_unless(
        error::unauthorized,
        equal_slice_bits(
            cs~load_msg_addr(), ;; sender address
            ds~load_msg_addr()  ;; factory address
        )
    );

    if(in_msg_body~load_op() == op::initialize) {
        in_msg_body~load_query_id(); ;; skipping
        set_code(in_msg_body~load_ref());

        cell fwd_msg_payload = in_msg_body~load_maybe_ref();

        if(~(fwd_msg_payload.cell_null?())) {
            var msg = begin_cell()
                .store_msg_flag(msg_flag::non_bounceable)
                .store_slice(my_address())
                .store_coins(0)
                .store_msgbody_prefix_ref(
                    fwd_msg_payload
                );

            send_raw_message(msg.end_cell(), CARRY_REMAINING_GAS);
        }

        return ();
    }

    throw(error::unknown_op);
}
