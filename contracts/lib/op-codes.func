;; Jetton Wallet
const int op::transfer = 0xf8a7ea5;
const int op::transfer_notification = 0x7362d09c;
const int op::internal_transfer = 0x178d4519;
const int op::excesses = 0xd53276db;
const int op::burn = 0x595f07bc;
const int op::withdraw_tons = 0x6d8e5e3c;
const int op::withdraw_jettons = 0x768a50b2;

;; Jetton Master
const int op::mint = 0x1674b0a0;
const int op::change_admin = 0x4840664f;
const int op::change_content = 0x5773d1f5;
const int op::burn_notification = 0x7bdd97de;
const int op::provide_wallet_address = 0x2c76b973;
const int op::take_wallet_address = 0xd1735400;

;; Blank contract
const int op::initialize = 0xbe5a7595;

;; Vault
const int op::init_vault = 0x4990564c;
const int op::payout = 0xd4374956;
const int op::add_liquidity = 0x406d7624;
const int op::swap = 0x25938561;
const int op::peer_swap = 0xaf51b44b;

;; Pool
const int op::init_pool = 0x69a3f9b9;
const int op::swap_notification = 0x278f5089;
const int op::update_reserves = 0xe8824c87;
const int op::remove_liquidity_one_coin = 0x861a37c9;
const int op::remove_liquidity_balanced = 0xa3550282;
;; Pool Admin
const int op::update_fees = 0xf74a44af;
const int op::update_A = 0xb2a96dab;
const int op::stop_update_A = 0x600df564;
const int op::update_rates_manager = 0x1a5d8162;
const int op::update_rates = 0x60f90a44;
const int op::withdraw_admin_fees = 0x9f50769f;

;; Factory
const int op::deploy_vault = 0x89ed7fbb;
const int op::deploy_pool = 0xaee6a3c6;
const int op::add_liquidity_notification = 0x5845cd8b;
const int op::admin_action = 0x785a1566;
const int op::transfer_ownership = 0x295e75a9;
const int op::update_code = 0x20ccb55b;

;; Liquidity Deposit
const int op::deposit_notification = 0xa6589976;
const int op::deposit_all = 0x6f875dec;

;; Upgrade
const int op::upgrade = 0xdbfaf817;

;; Mock contract
const int op::forward_msg = 0x0b43b0b3;

;; Oracle
const int op::update_signer_threshold = 0xad71dfe3;
const int op::update_sources_threshold = 0x211e2908;
const int op::update_trusted_signers = 0xe1ef9751;
const int op::update_certificate_trust_store = 0xad0192b6;
const int op::update_request_hash = 0xbd8e229e;
const int op::update_price = 0xaaacc05b;
const int op::send_price = 0xaf15cdc2;
const int op::update_max_timestamp_delay = 0x376071e0;

;; Utils
(slice, (int)) ~load_op(slice s) inline { return s.load_uint(32); }
(slice, (int)) ~load_query_id(slice s) inline { return s.load_uint(64); }
builder store_op(builder b, int op) inline { return b.store_uint(op, 32); }
builder store_query_id(builder b, int query_id) inline { return b.store_uint(query_id, 64); }
